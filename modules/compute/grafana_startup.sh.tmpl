#!/usr/bin/env bash
set -euxo pipefail

# If GOOGLE_CREDENTIALS exists (Terraform Cloud env), write it out for ADC
if [ -n "$${GOOGLE_CREDENTIALS:-}" ]; then
  install -d -m 700 /opt/gcp
  # keep exact JSON (no trailing newline)
  printf "%s" "$${GOOGLE_CREDENTIALS}" > /opt/gcp/sa.json
  chmod 600 /opt/gcp/sa.json
  echo 'export GOOGLE_APPLICATION_CREDENTIALS=/opt/gcp/sa.json' > /etc/profile.d/gcp-creds.sh
  export GOOGLE_APPLICATION_CREDENTIALS=/opt/gcp/sa.json
fi

# Install Docker
apt-get update -y
apt-get install -y docker.io

# Create provisioning directories
install -d -m 755 /opt/grafana/provisioning/datasources
install -d -m 755 /opt/grafana/dashboards

# Provision Google Cloud Monitoring datasource (uses ADC)
cat >/opt/grafana/provisioning/datasources/stackdriver.yaml <<'YAML'
apiVersion: 1
datasources:
  - name: Google Cloud Monitoring
    type: stackdriver
    access: proxy
    isDefault: true
    jsonData:
      authenticationType: default
      defaultProject: ${project_id}
YAML

# (Optional) allow override from env on the VM
sed -i "s|\${project_id}|$${PROJECT_ID_OVERRIDE:-${project_id}}|g" \
  /opt/grafana/provisioning/datasources/stackdriver.yaml

# Run Grafana
docker rm -f grafana || true
docker run -d --name grafana --restart=always \
  -p 3000:3000 \
  -e GF_SECURITY_ADMIN_USER='${grafana_admin_user}' \
  -e GF_SECURITY_ADMIN_PASSWORD='${grafana_admin_pass}' \
  -e GF_AUTH_ANONYMOUS_ENABLED=false \
  -v /opt/grafana/provisioning:/etc/grafana/provisioning \
  -v /opt/grafana/dashboards:/var/lib/grafana/dashboards \
  grafana/grafana:latest
